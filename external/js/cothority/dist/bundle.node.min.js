module.exports=function(e){var t={};function r(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=18)}([function(e,t,r){"use strict";const i=r(23),s=r(24).Root.fromJSON(i);e.exports.root=s},function(e,t){e.exports=require("@dedis/kyber-js")},function(e,t,r){"use strict";const i=r(8),s=r(9),n=(r(7),r(6),r(1)),o=r(3);class d{constructor(e,t,r,i,d){if(!(t instanceof n.Point))throw new TypeError;if(!(e instanceof n.Group))throw new TypeError;this.group=e,this.pub=t,this.addr=r,this._description=i;const a="https://dedis.epfl.ch/id/"+o.uint8ArrayToHex(this.pub.marshalBinary());this._id=new s(5,"ns:URL",a).export();let u=r.split("://");if(2!=u.length)throw new Error("invalid address: "+r);let l=u[1].split(":");l[1]=parseInt(l[1])+1,this.wsAddr=d?`wss://${l[0]}`:`ws://${l[0]}:${l[1]}`}static fromHexPublic(e,t,r,i,s){var n=o.hexToUint8Array(t),a=e.point();return a.unmarshalBinary(n),new d(e,a,r,i,s)}get public(){return this.pub}get websocketAddr(){return this.wsAddr}get tcpAddr(){return this.addr}get id(){return this._id}get description(){return this._description}toString(){return this.tcpAddr}}class a{constructor(e,t,r){this.group=e,this._identities=t,this._id=r}random(){const e=Math.floor(Math.random()*(this.length()-1));return this._identities[e]}get identities(){return this._identities}get(e){if(e>=this.identities.length)throw new Error("identity idx too high");return this.identities[e]}get length(){return this._identities.length}get id(){return this._id}aggregateKey(){const e=this.group.point().null();for(var t=0;t<this.length;t++)e.add(e,this.identities[t].public);return e}static fromTOML(e,t){if("string"!=typeof e)throw new TypeError;const r=i.parse(e);var s=void 0===r.Suite?"edwards25519":r.Suite;s=n.curve.newCurve(s);const o=r.servers.map(e=>d.fromHexPublic(s,e.Public,e.Address,e.description,t));return new a(s,o)}static fromProtobuf(e,t){var r=void 0===e.Suite?"edwards25519":e.Suite;r=n.curve.newCurve(r);const i=e.list.map(e=>{var i=r.point();return i.unmarshalBinary(new Uint8Array(e.public)),new d(r,i,e.address,e.description,t)});return new a(r,i)}}e.exports={Roster:a,ServerIdentity:d}},function(e,t,r){"use strict";const i=r(25);e.exports.uint8ArrayToHex=i.uint8ArrayToHex,e.exports.hexToUint8Array=i.hexToUint8Array,e.exports.uint8ArrayCompare=i.uint8ArrayCompare,e.exports.getClearBits=i.getClearBits,e.exports.getBitmaskLength=i.getBitmaskLength},function(e,t){e.exports=require("crypto")},function(e,t,r){"use strict";const i=r(20),{Socket:s,RosterSocket:n,LeaderSocket:o}=i;e.exports={Socket:s,RosterSocket:n,LeaderSocket:o}},function(e,t){e.exports=require("protobufjs")},function(e,t){e.exports=require("co")},function(e,t){e.exports=require("topl")},function(e,t){e.exports=require("pure-uuid")},function(e,t,r){"use strict";const i=r(26);e.exports.Client=i.Client},function(e,t,r){"use strict";class i{constructor(e,t,r,i){this._id=e,this._contractId=t,this._darcId=r,this._data=i}static fromProof(e){if(!e.matches())throw"This is a proof of absence";const t=Array.from(e.values[1]).map(e=>String.fromCharCode(e)).join("");return new i(e.key,t,e.values[2],e.values[0])}get id(){return this._id}get contractId(){return this._contractId}get darcId(){return this._darcId}get data(){return this._data}}e.exports=i},function(e,t,r){"use strict";const i=r(13);class s{constructor(e,t){this._command=e,this._arguments=t}static fromArgumentInfo(e,t,r){return new s(e,[new i(t,r)])}get command(){return this._command}get argumentsList(){return this._arguments}toProtobufValidMessage(){return{command:this._command,args:this.argumentsList.map(e=>e.toProtobufValidMessage())}}}e.exports=s},function(e,t,r){"use strict";e.exports=class{constructor(e,t){this._name=e,this._value=t.slice(0)}get name(){return this._name}get value(){return this._value.slice(0)}toProtobufValidMessage(){return{name:this.name,value:this.value}}}},function(e,t,r){"use strict";const i=r(4),s=r(34),n=(r(15),r(35));class o{constructor(e,t,r,i,s,n,o,d){this._instanceId=e,this._nonce=t,this._index=r,this._length=i,this._spawnInst=s,this._invokeInst=n,this._deleteInst=o,this._signatures=d}static createSpawnInstruction(e,t,r,i){return new o(void 0,e,t,r,i,void 0,void 0,void 0)}static createInvokeInstruction(e,t,r,i,s){return new o(e,t,r,i,void 0,s,void 0,void 0)}static createDeleteInstruction(e,t,r,i,s){return new o(e,t,r,i,void 0,void 0,s,void 0)}get instanceId(){return this._instanceId}set signatures(e){this._signatures=e.slice(0)}get hash(){const e=i.createHash("sha256");e.update(this._instanceId),e.update(this._nonce),e.update(this.intToArr4(this._index)),e.update(this.intToArr4(this._length));let t=[];void 0!==this._spawnInst?(e.update(new Uint8Array([0])),e.update(this._spawnInst.contractId),t=this._spawnInst.argumentsList):void 0!==this._invokeInst?(e.update(new Uint8Array([1])),t=this._invokeInst.argumentsList):e.update(new Uint8Array([2])),t.forEach(t=>{e.update(t.name),e.update(t.value)});const r=e.digest();return new Uint8Array(r.buffer,r.byteOffset,r.byteLength/Uint8Array.BYTES_PER_ELEMENT)}get action(){let e="invalid";return void 0!==this._spawnInst?e="spawn:"+this._spawnInst.contractId:void 0!==this._invokeInst?e="invoke:"+this._invokeInst.command:void 0!==this._deleteInst&&(e="delete"),e}toDarcRequest(e){return new s(e,this.action,this.hash,this._signatures.map(e=>e.signer),this._signatures.map(e=>e.signature))}signBy(e,t){this._signatures=[],t.forEach(e=>{this._signatures.push(new n(void 0,e.identity))});const r=this.toDarcRequest(e).hash();for(let i=0;i<this._signatures.length;i++)this._signatures[i]=new n(t[i].sign(r),t[i].identity)}toProtobufValidMessage(){let e={instanceid:this._instanceId,nonce:this._nonce,index:this._index,length:this._length,signatures:this._signatures.map(e=>e.toProtobufValidMessage())};return void 0!==this._spawnInst?e.spawn=this._spawnInst.toProtobufValidMessage():void 0!==this._invokeInst?e.invoke=this._invokeInst.toProtobufValidMessage():void 0!==this._deleteInst&&(e.delete=this._deleteInst.toProtobufValidMessage()),e}intToArr4(e){let t=new ArrayBuffer(4);return new DataView(t).setInt32(0,e,!0),new Uint8Array(t)}}e.exports=o},function(e,t,r){"use strict";e.exports=class{constructor(){}sign(e){throw new Error("Not implemented")}get private(){throw new Error("Not implemented")}get public(){throw new Error("Not implemented")}get identity(){throw new Error("Not implemented")}}},function(e,t,r){"use strict";e.exports=class{constructor(e){this._instructions=e}get instructions(){return this._instructions}toProtobufValidMessage(){return{instructions:this._instructions.map(e=>e.toProtobufValidMessage())}}}},function(e,t,r){"use strict";const i=r(1).curve.newCurve("edwards25519"),s=r(1).sign.schnorr,n=r(39);class o extends n{constructor(e){super(),this._pub=e}static fromProtobuf(e){let t=i.point();return t.unmarshalBinary(e.point),new o(t)}static fromPublicKey(e){let t=i.point();return t.unmarshalBinary(e),new o(t)}get public(){return this._pub.marshalBinary()}static fromSigner(e){return new o(e.public)}verify(e,t){return s.verify(i,this._pub,e,t)}toString(){return this.typeString()+":"+this._pub.toString().toLowerCase()}typeString(){return"ed25519"}toProtobufValidMessage(){return{point:this._pub.marshalBinary()}}}e.exports=o},function(e,t,r){"use strict";const i=r(19);e.exports=i},function(e,t,r){"use strict";const i=r(5),s=r(0),n=r(3),o=r(10),d=r(27),a=r(2);e.exports={net:i,misc:n,skipchain:o,omniledger:d,protobuf:s},e.exports.Roster=a.Roster,e.exports.ServerIdentity=a.ServerIdentity},function(e,t,r){"use strict";r(8),r(9);const i=r(6),s=r(7),n=r(21),o=r(22),d=r(0).root;r(2);function a(e,t){if("object"!=typeof i)throw new TypeError;this.url=e+"/"+t,this.protobuf=d,this.send=((e,t,r)=>new Promise((i,s)=>{const n=this.url+"/"+e.replace(/.*\./,"");console.log("net.Socket: new WebSocket("+n+")");const d=new o(n);d.binaryType="arraybuffer";const a=this.protobuf.lookup(e);void 0===a&&s(new Error("Model "+e+" not found"));const u=this.protobuf.lookup(t);void 0===u&&(console.log("failed to find "+t),s(new Error("Model "+t+" not found"))),"function"==typeof d.open&&(d._notify=d._notifyBrowser,Object.defineProperty(o.prototype,"_notify",{enumerable:!1}),Object.defineProperty(d,"_notify",{enumerable:!1}),d.open()),d.onopen=(()=>{const e=a.verify(r);e&&s(new Error(e));const t=a.create(r),i=a.encode(t).finish();d.send(i)}),d.onmessage=(e=>{d.close();const{data:t}=e;let r=new Uint8Array(t);const s=u.decode(r);i(s)}),d.onclose=(e=>{e.wasClean&&4e3!==e.code||s(new Error(e.reason))}),d.onerror=(e=>{s(e)})}))}e.exports={Socket:a,RosterSocket:class{constructor(e,t){this.addresses=e.identities.map(e=>e.websocketAddr),this.service=t,this.lastGoodServer=null}send(e,t,r){const i=this;return s.wrap(function*(){const s=i.addresses,o=i.service;n(s),i.lastGoodServer&&s.unshift(i.lastGoodServer);for(let n=0;n<s.length;n++){const d=s[n];try{const s=new a(d,o);console.log("RosterSocket: trying out "+d+"/"+o);const n=yield s.send(e,t,r);return i.lastGoodServer=d,Promise.resolve(n)}catch(e){console.error("rostersocket: "+e);continue}}return Promise.reject(new Error("no conodes are available"))})()}},LeaderSocket:class{constructor(e,t){if(this.service=t,this.roster=e,0===this.roster.identities.length)throw new Error("Roster should have atleast one node")}send(e,t,r){const i=this;return s.wrap(function*(){var s;for(let n=0;n<3;n++)try{const n=yield new a(i.roster.identities[0].websocketAddr,i.service).send(e,t,r);return Promise.resolve(n)}catch(e){console.error("error sending request: ",e.message),s=e}return Promise.reject(new Error("couldn't send request after 3 attempts: "+s.message))})()}}}},function(e,t){e.exports=require("shuffle-array")},function(e,t){e.exports=require("ws")},function(e,t){e.exports={nested:{cothority:{},cisc:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"CiscProto"},nested:{IDBlock:{fields:{latest:{type:"Data",id:1},proposed:{type:"Data",id:2},latestskipblock:{type:"skipchain.SkipBlock",id:3}}},Data:{fields:{threshold:{rule:"required",type:"sint32",id:1},device:{keyType:"string",type:"Device",id:2},storage:{keyType:"string",type:"string",id:3},roster:{type:"onet.Roster",id:4},votes:{keyType:"string",type:"bytes",id:5}}},Device:{fields:{point:{rule:"required",type:"bytes",id:1}}},PinRequest:{fields:{pin:{rule:"required",type:"string",id:1},public:{rule:"required",type:"bytes",id:2}}},StoreKeys:{fields:{type:{rule:"required",type:"sint32",id:1},final:{type:"pop.FinalStatement",id:2},publics:{rule:"repeated",type:"bytes",id:3},sig:{rule:"required",type:"bytes",id:4}}},CreateIdentity:{fields:{data:{type:"Data",id:1},type:{rule:"required",type:"sint32",id:2},schnsig:{type:"bytes",id:3},sig:{rule:"required",type:"bytes",id:4},nonce:{rule:"required",type:"bytes",id:5}}},CreateIdentityReply:{fields:{genesis:{type:"skipchain.SkipBlock",id:1}}},DataUpdate:{fields:{id:{rule:"required",type:"bytes",id:1}}},DataUpdateReply:{fields:{data:{type:"Data",id:1}}},ProposeSend:{fields:{id:{rule:"required",type:"bytes",id:1},propose:{type:"Data",id:2}}},ProposeUpdate:{fields:{id:{rule:"required",type:"bytes",id:1}}},ProposeUpdateReply:{fields:{propose:{type:"Data",id:1}}},ProposeVote:{fields:{id:{rule:"required",type:"bytes",id:1},signer:{rule:"required",type:"string",id:2},signature:{rule:"required",type:"bytes",id:3}}},ProposeVoteReply:{fields:{data:{type:"skipchain.SkipBlock",id:1}}},PropagateIdentity:{fields:{idblock:{type:"IDBlock",id:1},tag:{rule:"required",type:"string",id:2},pubstr:{rule:"required",type:"string",id:3}}},UpdateSkipBlock:{fields:{id:{rule:"required",type:"bytes",id:1},latest:{type:"skipchain.SkipBlock",id:2}}},Authenticate:{fields:{nonce:{rule:"required",type:"bytes",id:1},ctx:{rule:"required",type:"bytes",id:2}}}}},skipchain:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"SkipchainProto"},nested:{GetSingleBlock:{fields:{id:{rule:"required",type:"bytes",id:1}}},GetUpdateChain:{fields:{latestID:{rule:"required",type:"bytes",id:1}}},GetUpdateChainReply:{fields:{update:{rule:"repeated",type:"SkipBlock",id:1,options:{packed:!1}}}},SkipBlock:{fields:{index:{rule:"required",type:"int32",id:1},height:{rule:"required",type:"int32",id:2},maxHeight:{rule:"required",type:"int32",id:3},baseHeight:{rule:"required",type:"int32",id:4},backlinks:{rule:"repeated",type:"bytes",id:5},verifiers:{rule:"repeated",type:"bytes",id:6},parent:{type:"bytes",id:7},genesis:{rule:"required",type:"bytes",id:8},data:{rule:"required",type:"bytes",id:9},roster:{rule:"required",type:"onet.Roster",id:10},hash:{rule:"required",type:"bytes",id:11},forward:{rule:"repeated",type:"ForwardLink",id:12,options:{packed:!1}},children:{rule:"repeated",type:"bytes",id:13},payload:{type:"bytes",id:14}}},ForwardLink:{fields:{from:{rule:"required",type:"bytes",id:1},to:{rule:"required",type:"bytes",id:2},newRoster:{type:"onet.Roster",id:3},signature:{rule:"required",type:"ByzcoinSig",id:4}}},ByzcoinSig:{fields:{msg:{rule:"required",type:"bytes",id:1},sig:{rule:"required",type:"bytes",id:2}}},SchnorrSig:{fields:{challenge:{rule:"required",type:"bytes",id:1},response:{rule:"required",type:"bytes",id:2}}},Exception:{fields:{index:{rule:"required",type:"int32",id:1},commitment:{rule:"required",type:"bytes",id:2}}}}},onet:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"OnetProto"},nested:{Roster:{fields:{id:{type:"bytes",id:1},list:{rule:"repeated",type:"network.ServerIdentity",id:2,options:{packed:!1}},aggregate:{rule:"required",type:"bytes",id:3}}},Status:{fields:{field:{keyType:"string",type:"string",id:1}}}}},network:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"NetworkProto"},nested:{ServerIdentity:{fields:{public:{rule:"required",type:"bytes",id:1},id:{rule:"required",type:"bytes",id:2},address:{rule:"required",type:"string",id:3},description:{rule:"required",type:"string",id:4}}}}},pop:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"PoPProto"},nested:{ShortDesc:{fields:{location:{rule:"required",type:"string",id:1},roster:{type:"onet.Roster",id:2}}},PopDesc:{fields:{name:{rule:"required",type:"string",id:1},datetime:{rule:"required",type:"string",id:2},location:{rule:"required",type:"string",id:3},roster:{type:"onet.Roster",id:4},parties:{rule:"repeated",type:"ShortDesc",id:5,options:{packed:!1}}}},FinalStatement:{fields:{desc:{type:"PopDesc",id:1},attendees:{rule:"repeated",type:"bytes",id:2},signature:{rule:"required",type:"bytes",id:3},merged:{rule:"required",type:"bool",id:4}}},CheckConfig:{fields:{pophash:{rule:"required",type:"bytes",id:1},attendees:{rule:"repeated",type:"bytes",id:2}}},CheckConfigReply:{fields:{popstatus:{rule:"required",type:"sint32",id:1},pophash:{rule:"required",type:"bytes",id:2},attendees:{rule:"repeated",type:"bytes",id:3}}},MergeConfig:{fields:{final:{type:"FinalStatement",id:1},id:{rule:"required",type:"bytes",id:2}}},MergeConfigReply:{fields:{popstatus:{rule:"required",type:"sint32",id:1},pophash:{rule:"required",type:"bytes",id:2},final:{type:"FinalStatement",id:3}}},PinRequest:{fields:{pin:{rule:"required",type:"string",id:1},public:{rule:"required",type:"bytes",id:2}}},StoreConfig:{fields:{desc:{type:"PopDesc",id:1},signature:{rule:"required",type:"bytes",id:2}}},StoreConfigReply:{fields:{id:{rule:"required",type:"bytes",id:1}}},FinalizeRequest:{fields:{descid:{rule:"required",type:"bytes",id:1},attendees:{rule:"repeated",type:"bytes",id:2},signature:{rule:"required",type:"bytes",id:3}}},FinalizeResponse:{fields:{final:{type:"FinalStatement",id:1}}},FetchRequest:{fields:{id:{rule:"required",type:"bytes",id:1},returnuncomplete:{type:"bool",id:2}}},MergeRequest:{fields:{id:{rule:"required",type:"bytes",id:1},signature:{rule:"required",type:"bytes",id:2}}},GetProposals:{fields:{}},GetProposalsReply:{fields:{proposals:{rule:"repeated",type:"PopDesc",id:1,options:{packed:!1}}}},VerifyLink:{fields:{public:{rule:"required",type:"bytes",id:1}}},VerifyLinkReply:{fields:{exists:{rule:"required",type:"bool",id:1}}},GetLink:{fields:{}},GetLinkReply:{fields:{public:{rule:"required",type:"bytes",id:1}}},GetFinalStatements:{fields:{}},GetFinalStatementsReply:{fields:{finalstatements:{keyType:"string",type:"FinalStatement",id:1}}},StoreInstanceID:{fields:{partyid:{rule:"required",type:"bytes",id:1},instanceid:{rule:"required",type:"bytes",id:2}}},StoreInstanceIDReply:{fields:{}},GetInstanceID:{fields:{partyid:{rule:"required",type:"bytes",id:1}}},GetInstanceIDReply:{fields:{instanceid:{rule:"required",type:"bytes",id:1}}},StoreKeys:{fields:{id:{rule:"required",type:"bytes",id:1},keys:{rule:"repeated",type:"bytes",id:2},signature:{rule:"required",type:"bytes",id:3}}},StoreKeysReply:{fields:{}},GetKeys:{fields:{id:{rule:"required",type:"bytes",id:1}}},GetKeysReply:{fields:{id:{rule:"required",type:"bytes",id:1},keys:{rule:"repeated",type:"bytes",id:2}}},PopPartyInstance:{fields:{state:{rule:"required",type:"sint32",id:1},finalstatement:{type:"FinalStatement",id:2},previous:{rule:"required",type:"bytes",id:3},next:{rule:"required",type:"bytes",id:4}}}}},collection:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"CollectionProto"},nested:{Dump:{fields:{key:{rule:"required",type:"bytes",id:1},values:{rule:"repeated",type:"bytes",id:2},children:{rule:"required",type:"Children",id:3},label:{rule:"required",type:"bytes",id:4}}},Children:{fields:{left:{rule:"required",type:"bytes",id:1},right:{rule:"required",type:"bytes",id:2}}},Step:{fields:{left:{rule:"required",type:"Dump",id:1},right:{rule:"required",type:"Dump",id:2}}},Proof:{fields:{key:{rule:"required",type:"bytes",id:1},root:{rule:"required",type:"Dump",id:2},steps:{rule:"repeated",type:"Step",id:3,options:{packed:!1}}}}}},darc:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"DarcProto"},nested:{Darc:{fields:{version:{rule:"required",type:"uint64",id:1},description:{rule:"required",type:"bytes",id:2},baseid:{type:"bytes",id:3},previd:{rule:"required",type:"bytes",id:4},rules:{rule:"required",type:"Rules",id:5},signatures:{rule:"repeated",type:"Signature",id:6,options:{packed:!1}},verificationdarcs:{rule:"repeated",type:"Darc",id:7,options:{packed:!1}}}},Identity:{fields:{darc:{type:"IdentityDarc",id:1},ed25519:{type:"IdentityEd25519",id:2},x509ec:{type:"IdentityX509EC",id:3}}},IdentityEd25519:{fields:{point:{rule:"required",type:"bytes",id:1}}},IdentityX509EC:{fields:{public:{rule:"required",type:"bytes",id:1}}},IdentityDarc:{fields:{id:{rule:"required",type:"bytes",id:1}}},Signature:{fields:{signature:{rule:"required",type:"bytes",id:1},signer:{rule:"required",type:"Identity",id:2}}},Signer:{fields:{ed25519:{type:"SignerEd25519",id:1},x509ec:{type:"SignerX509EC",id:2}}},SignerEd25519:{fields:{point:{rule:"required",type:"bytes",id:1},secret:{rule:"required",type:"bytes",id:2}}},SignerX509EC:{fields:{point:{rule:"required",type:"bytes",id:1}}},Request:{fields:{baseid:{rule:"required",type:"bytes",id:1},action:{rule:"required",type:"string",id:2},msg:{rule:"required",type:"bytes",id:3},identities:{rule:"repeated",type:"Identity",id:4,options:{packed:!1}},signatures:{rule:"repeated",type:"bytes",id:5}}},Rules:{fields:{list:{rule:"repeated",type:"Rule",id:1,options:{packed:!1}}}},Rule:{fields:{action:{rule:"required",type:"string",id:1},expr:{rule:"required",type:"bytes",id:2}}}}},darcOCS:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"DarcOCSProto"},nested:{Darc:{fields:{owners:{rule:"repeated",type:"Identity",id:1,options:{packed:!1}},users:{rule:"repeated",type:"Identity",id:2,options:{packed:!1}},version:{rule:"required",type:"sint32",id:3},description:{type:"bytes",id:4},baseid:{type:"bytes",id:5},signature:{type:"Signature",id:6}}},Identity:{fields:{darc:{type:"IdentityDarc",id:1},ed25519:{type:"IdentityEd25519",id:2},x509ec:{type:"IdentityX509EC",id:3}}},IdentityEd25519:{fields:{point:{rule:"required",type:"bytes",id:1}}},IdentityX509EC:{fields:{public:{rule:"required",type:"bytes",id:1}}},IdentityDarc:{fields:{id:{rule:"required",type:"bytes",id:1}}},Signature:{fields:{signature:{rule:"required",type:"bytes",id:1},signaturepath:{rule:"required",type:"SignaturePath",id:2}}},SignaturePath:{fields:{darcs:{rule:"repeated",type:"Darc",id:1,options:{packed:!1}},signer:{rule:"required",type:"Identity",id:2},role:{rule:"required",type:"sint32",id:3}}},Signer:{fields:{ed25519:{type:"SignerEd25519",id:1},x509ec:{type:"SignerX509EC",id:2}}},SignerEd25519:{fields:{point:{rule:"required",type:"bytes",id:1},secret:{rule:"required",type:"bytes",id:2}}},SignerX509EC:{fields:{point:{rule:"required",type:"bytes",id:1}}}}},eventlog:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"EventLogProto"},nested:{SearchRequest:{fields:{instance:{rule:"required",type:"bytes",id:1},id:{rule:"required",type:"bytes",id:2},topic:{rule:"required",type:"string",id:3},from:{rule:"required",type:"sint64",id:4},to:{rule:"required",type:"sint64",id:5}}},SearchResponse:{fields:{events:{rule:"repeated",type:"Event",id:1,options:{packed:!1}},truncated:{rule:"required",type:"bool",id:2}}},Event:{fields:{when:{rule:"required",type:"sint64",id:1},topic:{rule:"required",type:"string",id:2},content:{rule:"required",type:"string",id:3}}}}},ocs:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"OCSProto"},nested:{Transaction:{fields:{write:{type:"Write",id:1},read:{type:"Read",id:2},darc:{type:"darcOCS.Darc",id:3},meta:{type:"bytes",id:4},timestamp:{rule:"required",type:"sint64",id:5}}},Write:{fields:{data:{rule:"required",type:"bytes",id:1},u:{rule:"required",type:"bytes",id:2},ubar:{rule:"required",type:"bytes",id:3},e:{rule:"required",type:"bytes",id:4},f:{rule:"required",type:"bytes",id:5},cs:{rule:"repeated",type:"bytes",id:6},extradata:{type:"bytes",id:7},reader:{rule:"required",type:"darcOCS.Darc",id:8},signature:{type:"darcOCS.Signature",id:9}}},Read:{fields:{dataid:{rule:"required",type:"bytes",id:1},signature:{rule:"required",type:"darcOCS.Signature",id:2}}},ReadDoc:{fields:{reader:{rule:"required",type:"darcOCS.Identity",id:1},readid:{rule:"required",type:"bytes",id:2},dataid:{rule:"required",type:"bytes",id:3}}},CreateSkipchainsRequest:{fields:{roster:{rule:"required",type:"onet.Roster",id:1},writers:{rule:"required",type:"darcOCS.Darc",id:2}}},CreateSkipchainsReply:{fields:{ocs:{type:"skipchain.SkipBlock",id:1},x:{rule:"required",type:"bytes",id:2}}},GetDarcPath:{fields:{ocs:{rule:"required",type:"bytes",id:1},basedarcid:{rule:"required",type:"bytes",id:2},identity:{rule:"required",type:"darcOCS.Identity",id:3},role:{rule:"required",type:"sint32",id:4}}},GetDarcPathReply:{fields:{path:{rule:"repeated",type:"darcOCS.Darc",id:1,options:{packed:!1}}}},UpdateDarc:{fields:{ocs:{rule:"required",type:"bytes",id:1},darc:{rule:"required",type:"darcOCS.Darc",id:2}}},UpdateDarcReply:{fields:{sb:{type:"skipchain.SkipBlock",id:1}}},WriteRequest:{fields:{ocs:{rule:"required",type:"bytes",id:1},write:{rule:"required",type:"Write",id:2},signature:{rule:"required",type:"darcOCS.Signature",id:3},readers:{type:"darcOCS.Darc",id:4}}},WriteReply:{fields:{sb:{type:"skipchain.SkipBlock",id:1}}},ReadRequest:{fields:{ocs:{rule:"required",type:"bytes",id:1},read:{rule:"required",type:"Read",id:2}}},ReadReply:{fields:{sb:{type:"skipchain.SkipBlock",id:1}}},SharedPublicRequest:{fields:{genesis:{rule:"required",type:"bytes",id:1}}},SharedPublicReply:{fields:{x:{rule:"required",type:"bytes",id:1}}},DecryptKeyRequest:{fields:{read:{rule:"required",type:"bytes",id:1},ephemeral:{type:"bytes",id:2},signature:{type:"darcOCS.Signature",id:3}}},DecryptKeyReply:{fields:{cs:{rule:"repeated",type:"bytes",id:1},xhatenc:{rule:"required",type:"bytes",id:2},x:{rule:"required",type:"bytes",id:3}}},GetReadRequests:{fields:{start:{rule:"required",type:"bytes",id:1},count:{rule:"required",type:"sint32",id:2}}},GetReadRequestsReply:{fields:{documents:{rule:"repeated",type:"ReadDoc",id:1,options:{packed:!1}}}},GetBunchRequest:{fields:{}},GetBunchReply:{fields:{bunches:{rule:"repeated",type:"skipchain.SkipBlock",id:1,options:{packed:!1}}}},GetLatestDarc:{fields:{ocs:{rule:"required",type:"bytes",id:1},darcid:{rule:"required",type:"bytes",id:2}}},GetLatestDarcReply:{fields:{darcs:{rule:"repeated",type:"darcOCS.Darc",id:1,options:{packed:!1}}}}}},omnicontracts:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"OmniLedgerContracts"},nested:{CoinInstance:{fields:{type:{rule:"required",type:"bytes",id:1},balance:{rule:"required",type:"uint64",id:2}}}}},omniledger:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"OmniLedgerProto"},nested:{DataHeader:{fields:{collectionroot:{rule:"required",type:"bytes",id:1},clienttransactionhash:{rule:"required",type:"bytes",id:2},statechangeshash:{rule:"required",type:"bytes",id:3},timestamp:{rule:"required",type:"sint64",id:4}}},DataBody:{fields:{transactions:{rule:"repeated",type:"ClientTransaction",id:1,options:{packed:!1}}}},CreateGenesisBlock:{fields:{version:{rule:"required",type:"sint32",id:1},roster:{rule:"required",type:"onet.Roster",id:2},genesisdarc:{rule:"required",type:"darc.Darc",id:3},blockinterval:{rule:"required",type:"sint64",id:4}}},CreateGenesisBlockResponse:{fields:{version:{rule:"required",type:"sint32",id:1},skipblock:{type:"skipchain.SkipBlock",id:2}}},AddTxRequest:{fields:{version:{rule:"required",type:"sint32",id:1},skipchainid:{rule:"required",type:"bytes",id:2},transaction:{rule:"required",type:"ClientTransaction",id:3},inclusionwait:{type:"sint32",id:4}}},AddTxResponse:{fields:{version:{rule:"required",type:"sint32",id:1}}},GetProof:{fields:{version:{rule:"required",type:"sint32",id:1},key:{rule:"required",type:"bytes",id:2},id:{rule:"required",type:"bytes",id:3}}},GetProofResponse:{fields:{version:{rule:"required",type:"sint32",id:1},proof:{rule:"required",type:"Proof",id:2}}},ChainConfig:{fields:{blockinterval:{rule:"required",type:"sint64",id:1},roster:{rule:"required",type:"onet.Roster",id:2}}},Proof:{fields:{inclusionproof:{rule:"required",type:"collection.Proof",id:1},latest:{rule:"required",type:"skipchain.SkipBlock",id:2},links:{rule:"repeated",type:"skipchain.ForwardLink",id:3,options:{packed:!1}}}},Instruction:{fields:{instanceid:{rule:"required",type:"bytes",id:1},nonce:{rule:"required",type:"bytes",id:2},index:{rule:"required",type:"sint32",id:3},length:{rule:"required",type:"sint32",id:4},spawn:{type:"Spawn",id:5},invoke:{type:"Invoke",id:6},delete:{type:"Delete",id:7},signatures:{rule:"repeated",type:"darc.Signature",id:8,options:{packed:!1}}}},Spawn:{fields:{contractid:{rule:"required",type:"string",id:1},args:{rule:"repeated",type:"Argument",id:2,options:{packed:!1}}}},Invoke:{fields:{command:{rule:"required",type:"string",id:1},args:{rule:"repeated",type:"Argument",id:2,options:{packed:!1}}}},Delete:{fields:{}},Argument:{fields:{name:{rule:"required",type:"string",id:1},value:{rule:"required",type:"bytes",id:2}}},ClientTransaction:{fields:{instructions:{rule:"repeated",type:"Instruction",id:1,options:{packed:!1}}}},StateChange:{fields:{stateaction:{rule:"required",type:"sint32",id:1},instanceid:{rule:"required",type:"bytes",id:2},contractid:{rule:"required",type:"bytes",id:3},value:{rule:"required",type:"bytes",id:4},darcid:{rule:"required",type:"bytes",id:5}}},Coin:{fields:{name:{rule:"required",type:"bytes",id:1},value:{rule:"required",type:"uint64",id:2}}}}},status:{options:{java_package:"ch.epfl.dedis.proto",java_outer_classname:"StatusProto"},nested:{Request:{fields:{}},Response:{fields:{status:{keyType:"string",type:"onet.Status",id:1},serveridentity:{type:"network.ServerIdentity",id:2}}}}}}}},function(e,t){e.exports=require("protobufjs/light")},function(e,t,r){"use strict";t.uint8ArrayToHex=function(e){if(e.constructor!==Uint8Array)throw new TypeError;return Array.from(e).map((e,t)=>("00"+e.toString(16)).slice(-2)).join("")},t.hexToUint8Array=function(e){if("string"!=typeof e)throw new TypeError;return new Uint8Array(Math.ceil(e.length/2)).map((t,r)=>parseInt(e.substr(2*r,2),16))},t.uint8ArrayCompare=function(e,t,r){if(e.constructor!==Uint8Array)throw TypeError;if(t.constructor!==Uint8Array)throw TypeError;return e.length==t.length&&(r?function(e,t){throw new Error("not implemented yet")}():function(e,t){for(var r=0;r<e.length;r++)if(e[r]!=t[r])return!1;return!0}(e,t))},t.getClearBits=function(e,t){if(e.constructor!==Uint8Array)throw TypeError;const r=e.length,i=[];for(var s=0;s<t;s++){var n=s>>3,o=1<<(7&s);n<r&&0==(e[n]&o)&&i.push(s)}return i.sort((e,t)=>e-t)},t.getBitmaskLength=function(e){if(e.constructor!==Uint8Array)throw TypeError;return e.length<<3}},function(e,t,r){"use strict";const i=r(5),s=(r(0),r(3)),n=r(2),o=r(4),d=(r(1),r(7)),a="Skipchain";e.exports.Client=class{constructor(e,t,r){this.lastRoster=t,this.lastID=s.hexToUint8Array(r),this.group=e}get latestID(){return s.uint8ArrayToHex(this.lastID)}getSkipblock(e){const t={id:e};return new i.RosterSocket(this.lastRoster,"Skipchain").send("GetSingleBlock","SkipBlock",t)}getLatestBlock(){return d.wrap(function*(e){const t={latestID:e.lastID},r=e.lastRoster.length;for(var s=0;s<r;){e.socket=new i.RosterSocket(e.lastRoster,a);var o,d=null;try{d=yield e.socket.send("GetUpdateChain","GetUpdateChainReply",t)}catch(e){return Promise.reject(e)}try{o=e.verifyUpdateChainReply(d),console.log("Verifying update 5...")}catch(e){console.log("error in the process : "+e),console.log(e.stack),s++;continue}if(e.lastRoster=n.Roster.fromProtobuf(o.roster),e.lastID=o.hash,!o.forward||0==o.forward.length)return Promise.resolve(o)}return Promise.reject(s+" occured retrieving the latest block...")})(this)}verifyUpdateChainReply(e){console.log("Verifying update...");const t=e.update;if(0==t.length)throw new Error("no block returned in the chain");console.log("Verifying update 2...");const r=t[0],i=new Uint8Array(r.hash);if(!s.uint8ArrayCompare(i,this.lastID))throw new Error("the first ID is not the one we have");if(console.log("Verifying update 3..."),1==t.length)return r;var o=r;console.log("Verifying update 4...");for(var d=1;d<t.length;d++){console.log(d+"/"+t.length);const e=t[d],r=o.forward;if(0==r.length)return o;const i=r[r.length-1],s=n.Roster.fromProtobuf(o.roster);var a=this.verifyForwardLink(s,i);if(a)throw a;o=e}return console.log("Verifying is over :)"),o}verifyForwardLink(e,t){const r=t.signature.msg,i=o.createHash("sha256");if(i.update(t.from),i.update(t.to),void 0!==t.roster)return new Error("forwardlink verification with a roster change is not implemented yet");let n=i.digest(),d=new Uint8Array(n.buffer,n.byteOffset,n.byteLength/Uint8Array.BYTES_PER_ELEMENT);if(!s.uint8ArrayCompare(d,r,!1))return new Error("recreated message does not match");var a=t.signature;const u=a.sig.length,l=this.group.pointLen(),p=this.group.scalarLen();if(u<l+p)return new Error("signature length invalid");const c=a.sig.slice(l+p,a.sig.length);if(s.getBitmaskLength(c)>e.length+8-e.length%8)return new Error("bitmask length invalid");const y=(e.length-1)/3,h=s.getClearBits(c,e.length);if(h.length>y)return new Error("nb of signers absent above threshold");const f=e.aggregateKey();h.forEach(t=>{f.sub(f,e.get(t).pub)});const g=this.group.point();g.unmarshalBinary(a.sig.slice(0,l));const b=this.group.scalar();b.unmarshalBinary(a.sig.slice(l,l+p));const q=function(e,...t){const r=o.createHash("sha256");for(let s of t)r.update(s);const i=e.scalar();return i.setBytes(Uint8Array.from(r.digest())),i}(this.group,g.marshalBinary(),f.marshalBinary(),r),m=this.group.point().neg(f);m.mul(q,m);const _=this.group.point().mul(b,null);return _.add(_,m),g.equal(_)?null:new Error("invalid signature")}}},function(e,t,r){"use strict";const i=r(28),s=r(32),n=r(37);e.exports={contracts:s,darc:n},e.exports.OmniledgerRPC=i},function(e,t,r){"use strict";r(2),r(5);const i=r(29),s=r(30),n=r(31),o=r(10).Client,d=r(1),a=r(3),u=r(6);class l{constructor(e,t,r,i,s,n,o){this._config=e,this._socket=t,this._genesisDarc=r,this._genesis=i,this._latest=s,this._skipchainID=n,this._skipchain=o}get config(){return this._config}get skipchainID(){return this._skipchainID}get roster(){return this.config.roster}static get currentVersion(){return 1}sendTransactionAndWait(e,t){let r={version:l.currentVersion,skipchainid:this.skipchainID,transaction:e.toProtobufValidMessage(),inclusionwait:t};return this._socket.send("AddTxRequest","AddTxResponse",r).then(()=>{console.log("Successfully stored request - waiting for inclusion")}).catch(e=>(e instanceof u.util.ProtocolError&&console.log("The transaction has not been included within "+t+" blocks"),Promise.reject(e)))}getProof(e){return l.getProof(this._socket,this._skipchainID,e)}static getProof(e,t,r){const s={version:l.currentVersion,id:t,key:r};return e.send("GetProof","GetProofResponse",s).then(e=>Promise.resolve(new i(e.proof))).catch(e=>(console.dir("err : "+e),console.trace(),Promise.reject(e)))}static checkProof(e,t){if(!e.matches())throw"could'nt find darc";if(3!==e.values.length)throw"incorrect number of values in proof";let r=Array.from(e.values[1]).map(e=>String.fromCharCode(e)).join("");if(r!==t)throw"contract name is not "+t+", got "+r}static fromKnownConfiguration(e,t){if(void 0===e.send)throw new TypeError("roster must be of type Roster");if(!(t instanceof Uint8Array))throw new TypeError("skipchainId must be of type UInt8Array");let r=void 0,i=void 0;return this.getProof(e,t,new Uint8Array(32)).then(i=>(l.checkProof(i,"config"),r=s.fromByteBuffer(i.values[0]),l.getProof(e,t,i.values[2]))).then(s=>{l.checkProof(s,"darc"),i=n.fromByteBuffer(s.values[0]);let u=new o(d.curve.newCurve("edwards25519"),r.roster,a.uint8ArrayToHex(t)),p=void 0;return u.getSkipblock(t).then(e=>(p=e,u.getLatestBlock())).then(s=>Promise.resolve(new l(r,e,i,p,s,t,u)))})}}e.exports=l},function(e,t,r){"use strict";const i=r(3);e.exports=class{constructor(e){this._proof=e;let t=e.inclusionproof.steps,r=t[t.length-1].left,s=t[t.length-1].right;i.uint8ArrayCompare(r.key,this.key,!1)?this._leaf=r:i.uint8ArrayCompare(s.key,this.key,!1)&&(this._leaf=s)}matches(){return void 0!==this._leaf}get key(){return this._proof.inclusionproof.key.slice(0)}get values(){let e=[];return this._leaf.values.forEach(t=>{e.push(t.slice(0))}),e}}},function(e,t,r){"use strict";const i=r(0).root,s=r(2);class n{constructor(e,t){this._blockInterval=e,this._roster=t}get blockInterval(){return this._blockInterval}get roster(){return this._roster}static fromByteBuffer(e){if(!(e instanceof Uint8Array))throw"buf must be of type UInt8Array";let t=i.lookup("ChainConfig").decode(e);return new n(t.blockinterval,s.Roster.fromProtobuf(t.roster,!1))}equals(e){return void 0!==e&&(e instanceof n&&this._blockInterval===e.blockInterval)}}e.exports=n},function(e,t,r){"use strict";const i=r(0).root;class s{constructor(e,t,r,i,s,n){this._version=e,this._description=t,this._baseID=r,this._prevID=i,this._rules=s,this._signatures=n}static fromProtoBuf(e){let t=e.version,r=e.description.slice(0),i=void 0;t>0&&(i=e.baseid.slice(0));let n=e.previd.slice(0),o=new Map;Object.entries(e.rules).forEach(([e,t])=>o.set(e,t.slice(0)));let d=e.signatures;return void 0!==d&&(d=d.slice(0)),new s(t,r,i,n,o,d)}static fromByteBuffer(e){if(!(e instanceof Uint8Array))throw"buf must be of type UInt8Array";let t=i.lookup("Darc").decode(e);return s.fromProtoBuf(t)}}e.exports=s},function(e,t,r){"use strict";const i=r(33),s=r(36);e.exports.PopPartyInstance=i,e.exports.CoinsInstance=s},function(e,t,r){"use strict";const i=r(0).root,s=r(11),n=r(12),o=r(14),d=r(16),a=r(4);class u{constructor(e,t,r,i,s,n,o){this._ol=e,this._instanceId=t,this._instance=r,this._state=i,this._finalStatement=s,this._previous=n,this._next=o}get state(){return this._state}get finalStatement(){return this._finalStatement}static fromInstanceId(e,t){return new u(e,t).update()}storeFinalStatement(e,t){const r=i.lookup("FinalStatement"),s=r.create(e),a=r.encode(s).finish(),u=n.fromArgumentInfo("Finalize","FinalStatement",a),l=o.createInvokeInstruction(this._instanceId,new Uint8Array(32),0,1,u);l.signBy(this._instance.darcId,[t]);const p=new d([l]);return this._ol.sendTransactionAndWait(p,10)}update(){return this._ol.getProof(this._instanceId).then(e=>{this._instance=s.fromProof(e);const t=i.lookup("PopPartyInstance").decode(this._instance.data);return this._state=t.state,this._finalStatement=t.finalstatement,this._previous=t.previous,this._next=t.next,Promise.resolve(this)})}getAccountInstanceId(e){const t=a.createHash("sha256");t.update(this._instanceId),t.update(e.public);let r=t.digest();return new Uint8Array(r.buffer,r.byteOffset,r.byteLength/Uint8Array.BYTES_PER_ELEMENT)}}e.exports=u},function(e,t,r){"use strict";const i=r(4);e.exports=class{constructor(e,t,r,i,s){this._baseId=e,this._action=t,this._msg=r,this._identities=i,this._signatures=s}set signatures(e){this._signatures=e}hash(){const e=i.createHash("sha256");void 0!==this._baseId&&e.update(this._baseId),e.update(this._action),e.update(this._msg),this._identities.forEach(t=>{e.update(t.toString())});const t=e.digest();return new Uint8Array(t.buffer,t.byteOffset,t.byteLength/Uint8Array.BYTES_PER_ELEMENT)}}},function(e,t,r){"use strict";e.exports=class{constructor(e,t){this._signature=e,this._signer=t}get signer(){return this._signer}get signature(){return this._signature}toProtobufValidMessage(){return{signature:this._signature,signer:this._signer.toProtobufValidMessage()}}}},function(e,t,r){"use strict";const i=r(11),s=r(12),n=r(0).root,o=r(13),d=r(14),a=r(16);class u{constructor(e,t,r,i,s){this._ol=e,this._instanceId=t,this._instance=r,this._type=i,this._balance=s}get type(){return this._type}get balance(){return this._balance}static fromInstanceId(e,t){return new u(e,t).update()}transfer(e,t,r){let i=[],n=new ArrayBuffer(8);new DataView(n).setBigUint64(0,BigInt(e),!0),i.push(new o("coins",new Uint8Array(n))),i.push(new o("destination",t));let u=new s("transfer",i),l=d.createInvokeInstruction(this._instanceId,new Uint8Array(32),0,1,u);l.signBy(this._instance.darcId,[r]);const p=new a([l]);return this._ol.sendTransactionAndWait(p,10)}update(){return this._ol.getProof(this._instanceId).then(e=>{this._instance=i.fromProof(e);const t=n.lookup("CoinInstance").decode(this._instance.data);return this._type=Array.from(t.type).map(e=>String.fromCharCode(e)).join(""),this._balance=t.balance,Promise.resolve(this)})}}e.exports=u},function(e,t,r){"use strict";const i=r(38),s=r(17);e.exports.SignerEd25519=i,e.exports.IdentityEd25519=s},function(e,t,r){"use strict";const i=r(15),s=r(1).curve.newCurve("edwards25519"),n=r(1).sign.schnorr,o=r(17);class d extends i{constructor(e,t){super(),this._pub=e,this._priv=t}static fromByteArray(e){const t=s.scalar();return t.unmarshalBinary(e),new d(s.point().base().mul(t),t)}get private(){return this._priv}get public(){return this._pub}get identity(){return new o(this._pub)}sign(e){return n.sign(s,this._priv,e)}}e.exports=d},function(e,t,r){"use strict";e.exports=class{constructor(){}get public(){throw new Error("Not implemented")}verify(e,t){throw new Error("Not implemented")}toString(){throw new Error("Not implemented")}typeString(){throw new Error("Not implemented")}toProtobufValidMessage(){throw new Error("Not implemented")}}}]);